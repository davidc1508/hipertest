@model TesteHiper.Data.Model.ProdutoModel

@{ 
    var estoques = ViewBag.Estoques as List<TesteHiper.Data.Model.EstoqueModel>;
}

<h4>Cadastro de produto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="@Html.Raw(Model != null && Model.Id > 0 ? "Atualizar" : "Cadastrar")">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Guid)
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Valor" class="control-label"></label>
                <input asp-for="Valor" class="form-control" />
                <span asp-validation-for="Valor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Estoque" class="control-label"></label>
                <select asp-for="Estoque.Id" class="form-control">
                    <option value="">Selecione um estoque</option>
                    @foreach(var item in estoques)
                    {
                        <option value="@item.Id">@item.Nome</option>
                    }
                </select>
                
            </div>
            <div class="form-group">
                <input type="submit" value="@Html.Raw(Model?.Id > 0 ? "Atualizar" : "Cadastrar")" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-controller="Home">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
